generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// 
model user_stats {
  id               String @unique
  totalProjects    Int    @map("total_projects")
  totalDeployments Int    @map("total_deployments")
  activePlan       Plan   @map("active_plan")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map("compound_id")
  userId             String    @map("user_id")
  providerType       String    @map("provider_type")
  providerId         String    @map("provider_id")
  refreshToken       String?   @map("refresh_token")
  accessToken        String?   @map("access_token")
  accessTokenExpires DateTime? @map("access_token_expires")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @default(now()) @map("updated_at")
  providerAccountId  String    @map("provider_account_id")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map("accounts")
}

model User {
  id            String       @id @default(uuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?    @map("email_verified")
  image         String?
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @default(now()) @map("updated_at")
  activePlan    Plan         @default(OSS) @map("active_plan")
  Deployment    Deployment[]
  Project       Project[]

  @@map("users")
}

model VerificationRequest {
  id         String   @id @default(uuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")

  @@map("verification_requests")
}

model Project {
  id                         String      @id @default(uuid())
  name                       String
  createdAt                  DateTime    @default(now()) @map("created_at")
  updatedAt                  DateTime    @default(now()) @map("updated_at")
  type                       ProjectType @default(STATIC)
  repoURL                    String      @map("repo_url")
  buildCommand               String      @map("build_command")
  buildOutput                String      @default("public") @map("build_output")
  builder                    String      @default("nodejs:12.4.0")
  packageManager             String?     @default("npm") @map("package_manager")
  ownerUserId                String      @map("owner_user_id")
  owner                      User        @relation(fields: [ownerUserId], references: [id])
  latestSuccessfulDeployment Deployment?

  @@index([name], name: "projectName")
  @@map("projects")
}

model Deployment {
  id          String           @id @default(cuid())
  projectId   String           @unique @map("project_id")
  ownerUserId String           @map("owner_user_id")
  status      DeploymentStatus @default(NOT_READY)
  owner       User             @relation(fields: [ownerUserId], references: [id])
  project     Project          @relation(fields: [projectId], references: [id])

  @@index([projectId], name: "deployment_project_id")
  @@map("deployments")
}

enum DeploymentStatus {
  NOT_READY
  READY
  BUILDING
  CANCELLED
  FAILED
}

enum ProjectType {
  STATIC
  DYNAMIC
}

enum Plan {
  OSS
  PRO
}
